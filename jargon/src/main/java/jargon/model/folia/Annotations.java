//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.21 at 12:15:47 PM CEST 
//


package jargon.model.folia;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element ref="{http://ilk.uvt.nl/folia}domain-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}list-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}part-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}phon-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}utterance-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}chunking-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}pos-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}lang-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}alignment-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}statement-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}dependency-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}entry-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}string-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}syntax-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}entity-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}sense-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}division-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}note-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}table-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}sentiment-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}lemma-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}figure-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}sentence-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}term-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}errordetection-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}subjectivity-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}paragraph-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}gap-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}predicate-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}coreference-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}example-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}token-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}phonological-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}text-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}metric-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}morphological-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}complexalignment-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}observation-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}event-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}timesegment-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}correction-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}linebreak-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}style-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}whitespace-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}semrole-annotation"/>
 *         &lt;element ref="{http://ilk.uvt.nl/folia}definition-annotation"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "domainAnnotationOrListAnnotationOrPartAnnotation"
})
@XmlRootElement(name = "annotations")
public class Annotations {

    @XmlElements({
        @XmlElement(name = "domain-annotation", type = DomainAnnotation.class),
        @XmlElement(name = "list-annotation", type = ListAnnotation.class),
        @XmlElement(name = "part-annotation", type = PartAnnotation.class),
        @XmlElement(name = "phon-annotation", type = PhonAnnotation.class),
        @XmlElement(name = "utterance-annotation", type = UtteranceAnnotation.class),
        @XmlElement(name = "chunking-annotation", type = ChunkingAnnotation.class),
        @XmlElement(name = "pos-annotation", type = PosAnnotation.class),
        @XmlElement(name = "lang-annotation", type = LangAnnotation.class),
        @XmlElement(name = "alignment-annotation", type = AlignmentAnnotation.class),
        @XmlElement(name = "statement-annotation", type = StatementAnnotation.class),
        @XmlElement(name = "dependency-annotation", type = DependencyAnnotation.class),
        @XmlElement(name = "entry-annotation", type = EntryAnnotation.class),
        @XmlElement(name = "string-annotation", type = StringAnnotation.class),
        @XmlElement(name = "syntax-annotation", type = SyntaxAnnotation.class),
        @XmlElement(name = "entity-annotation", type = EntityAnnotation.class),
        @XmlElement(name = "sense-annotation", type = SenseAnnotation.class),
        @XmlElement(name = "division-annotation", type = DivisionAnnotation.class),
        @XmlElement(name = "note-annotation", type = NoteAnnotation.class),
        @XmlElement(name = "table-annotation", type = TableAnnotation.class),
        @XmlElement(name = "sentiment-annotation", type = SentimentAnnotation.class),
        @XmlElement(name = "lemma-annotation", type = LemmaAnnotation.class),
        @XmlElement(name = "figure-annotation", type = FigureAnnotation.class),
        @XmlElement(name = "sentence-annotation", type = SentenceAnnotation.class),
        @XmlElement(name = "term-annotation", type = TermAnnotation.class),
        @XmlElement(name = "errordetection-annotation", type = ErrordetectionAnnotation.class),
        @XmlElement(name = "subjectivity-annotation", type = SubjectivityAnnotation.class),
        @XmlElement(name = "paragraph-annotation", type = ParagraphAnnotation.class),
        @XmlElement(name = "gap-annotation", type = GapAnnotation.class),
        @XmlElement(name = "predicate-annotation", type = PredicateAnnotation.class),
        @XmlElement(name = "coreference-annotation", type = CoreferenceAnnotation.class),
        @XmlElement(name = "example-annotation", type = ExampleAnnotation.class),
        @XmlElement(name = "token-annotation", type = TokenAnnotation.class),
        @XmlElement(name = "phonological-annotation", type = PhonologicalAnnotation.class),
        @XmlElement(name = "text-annotation", type = TextAnnotation.class),
        @XmlElement(name = "metric-annotation", type = MetricAnnotation.class),
        @XmlElement(name = "morphological-annotation", type = MorphologicalAnnotation.class),
        @XmlElement(name = "complexalignment-annotation", type = ComplexalignmentAnnotation.class),
        @XmlElement(name = "observation-annotation", type = ObservationAnnotation.class),
        @XmlElement(name = "event-annotation", type = EventAnnotation.class),
        @XmlElement(name = "timesegment-annotation", type = TimesegmentAnnotation.class),
        @XmlElement(name = "correction-annotation", type = CorrectionAnnotation.class),
        @XmlElement(name = "linebreak-annotation", type = LinebreakAnnotation.class),
        @XmlElement(name = "style-annotation", type = StyleAnnotation.class),
        @XmlElement(name = "whitespace-annotation", type = WhitespaceAnnotation.class),
        @XmlElement(name = "semrole-annotation", type = SemroleAnnotation.class),
        @XmlElement(name = "definition-annotation", type = DefinitionAnnotation.class)
    })
    protected List<Object> domainAnnotationOrListAnnotationOrPartAnnotation;

    /**
     * Gets the value of the domainAnnotationOrListAnnotationOrPartAnnotation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the domainAnnotationOrListAnnotationOrPartAnnotation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDomainAnnotationOrListAnnotationOrPartAnnotation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DomainAnnotation }
     * {@link ListAnnotation }
     * {@link PartAnnotation }
     * {@link PhonAnnotation }
     * {@link UtteranceAnnotation }
     * {@link ChunkingAnnotation }
     * {@link PosAnnotation }
     * {@link LangAnnotation }
     * {@link AlignmentAnnotation }
     * {@link StatementAnnotation }
     * {@link DependencyAnnotation }
     * {@link EntryAnnotation }
     * {@link StringAnnotation }
     * {@link SyntaxAnnotation }
     * {@link EntityAnnotation }
     * {@link SenseAnnotation }
     * {@link DivisionAnnotation }
     * {@link NoteAnnotation }
     * {@link TableAnnotation }
     * {@link SentimentAnnotation }
     * {@link LemmaAnnotation }
     * {@link FigureAnnotation }
     * {@link SentenceAnnotation }
     * {@link TermAnnotation }
     * {@link ErrordetectionAnnotation }
     * {@link SubjectivityAnnotation }
     * {@link ParagraphAnnotation }
     * {@link GapAnnotation }
     * {@link PredicateAnnotation }
     * {@link CoreferenceAnnotation }
     * {@link ExampleAnnotation }
     * {@link TokenAnnotation }
     * {@link PhonologicalAnnotation }
     * {@link TextAnnotation }
     * {@link MetricAnnotation }
     * {@link MorphologicalAnnotation }
     * {@link ComplexalignmentAnnotation }
     * {@link ObservationAnnotation }
     * {@link EventAnnotation }
     * {@link TimesegmentAnnotation }
     * {@link CorrectionAnnotation }
     * {@link LinebreakAnnotation }
     * {@link StyleAnnotation }
     * {@link WhitespaceAnnotation }
     * {@link SemroleAnnotation }
     * {@link DefinitionAnnotation }
     * 
     * 
     */
    public List<Object> getDomainAnnotationOrListAnnotationOrPartAnnotation() {
        if (domainAnnotationOrListAnnotationOrPartAnnotation == null) {
            domainAnnotationOrListAnnotationOrPartAnnotation = new ArrayList<Object>();
        }
        return this.domainAnnotationOrListAnnotationOrPartAnnotation;
    }

}
