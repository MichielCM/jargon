//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.27 at 11:47:51 AM CEST 
//


package jargon.model.folia;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generatedfolianochoice package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Content_QNAME = new QName("http://ilk.uvt.nl/folia", "content");
    private final static QName _ForeignData_QNAME = new QName("http://ilk.uvt.nl/folia", "foreign-data");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generatedfolianochoice
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Metadata }
     * 
     */
    public Metadata createMetadata() {
        return new Metadata();
    }

    /**
     * Create an instance of {@link Annotations }
     * 
     */
    public Annotations createAnnotations() {
        return new Annotations();
    }

    /**
     * Create an instance of {@link DomainAnnotation }
     * 
     */
    public DomainAnnotation createDomainAnnotation() {
        return new DomainAnnotation();
    }

    /**
     * Create an instance of {@link ListAnnotation }
     * 
     */
    public ListAnnotation createListAnnotation() {
        return new ListAnnotation();
    }

    /**
     * Create an instance of {@link PartAnnotation }
     * 
     */
    public PartAnnotation createPartAnnotation() {
        return new PartAnnotation();
    }

    /**
     * Create an instance of {@link PhonAnnotation }
     * 
     */
    public PhonAnnotation createPhonAnnotation() {
        return new PhonAnnotation();
    }

    /**
     * Create an instance of {@link UtteranceAnnotation }
     * 
     */
    public UtteranceAnnotation createUtteranceAnnotation() {
        return new UtteranceAnnotation();
    }

    /**
     * Create an instance of {@link ChunkingAnnotation }
     * 
     */
    public ChunkingAnnotation createChunkingAnnotation() {
        return new ChunkingAnnotation();
    }

    /**
     * Create an instance of {@link PosAnnotation }
     * 
     */
    public PosAnnotation createPosAnnotation() {
        return new PosAnnotation();
    }

    /**
     * Create an instance of {@link LangAnnotation }
     * 
     */
    public LangAnnotation createLangAnnotation() {
        return new LangAnnotation();
    }

    /**
     * Create an instance of {@link AlignmentAnnotation }
     * 
     */
    public AlignmentAnnotation createAlignmentAnnotation() {
        return new AlignmentAnnotation();
    }

    /**
     * Create an instance of {@link StatementAnnotation }
     * 
     */
    public StatementAnnotation createStatementAnnotation() {
        return new StatementAnnotation();
    }

    /**
     * Create an instance of {@link DependencyAnnotation }
     * 
     */
    public DependencyAnnotation createDependencyAnnotation() {
        return new DependencyAnnotation();
    }

    /**
     * Create an instance of {@link EntryAnnotation }
     * 
     */
    public EntryAnnotation createEntryAnnotation() {
        return new EntryAnnotation();
    }

    /**
     * Create an instance of {@link StringAnnotation }
     * 
     */
    public StringAnnotation createStringAnnotation() {
        return new StringAnnotation();
    }

    /**
     * Create an instance of {@link SyntaxAnnotation }
     * 
     */
    public SyntaxAnnotation createSyntaxAnnotation() {
        return new SyntaxAnnotation();
    }

    /**
     * Create an instance of {@link EntityAnnotation }
     * 
     */
    public EntityAnnotation createEntityAnnotation() {
        return new EntityAnnotation();
    }

    /**
     * Create an instance of {@link SenseAnnotation }
     * 
     */
    public SenseAnnotation createSenseAnnotation() {
        return new SenseAnnotation();
    }

    /**
     * Create an instance of {@link DivisionAnnotation }
     * 
     */
    public DivisionAnnotation createDivisionAnnotation() {
        return new DivisionAnnotation();
    }

    /**
     * Create an instance of {@link NoteAnnotation }
     * 
     */
    public NoteAnnotation createNoteAnnotation() {
        return new NoteAnnotation();
    }

    /**
     * Create an instance of {@link TableAnnotation }
     * 
     */
    public TableAnnotation createTableAnnotation() {
        return new TableAnnotation();
    }

    /**
     * Create an instance of {@link SentimentAnnotation }
     * 
     */
    public SentimentAnnotation createSentimentAnnotation() {
        return new SentimentAnnotation();
    }

    /**
     * Create an instance of {@link LemmaAnnotation }
     * 
     */
    public LemmaAnnotation createLemmaAnnotation() {
        return new LemmaAnnotation();
    }

    /**
     * Create an instance of {@link FigureAnnotation }
     * 
     */
    public FigureAnnotation createFigureAnnotation() {
        return new FigureAnnotation();
    }

    /**
     * Create an instance of {@link SentenceAnnotation }
     * 
     */
    public SentenceAnnotation createSentenceAnnotation() {
        return new SentenceAnnotation();
    }

    /**
     * Create an instance of {@link TermAnnotation }
     * 
     */
    public TermAnnotation createTermAnnotation() {
        return new TermAnnotation();
    }

    /**
     * Create an instance of {@link ErrordetectionAnnotation }
     * 
     */
    public ErrordetectionAnnotation createErrordetectionAnnotation() {
        return new ErrordetectionAnnotation();
    }

    /**
     * Create an instance of {@link SubjectivityAnnotation }
     * 
     */
    public SubjectivityAnnotation createSubjectivityAnnotation() {
        return new SubjectivityAnnotation();
    }

    /**
     * Create an instance of {@link ParagraphAnnotation }
     * 
     */
    public ParagraphAnnotation createParagraphAnnotation() {
        return new ParagraphAnnotation();
    }

    /**
     * Create an instance of {@link GapAnnotation }
     * 
     */
    public GapAnnotation createGapAnnotation() {
        return new GapAnnotation();
    }

    /**
     * Create an instance of {@link PredicateAnnotation }
     * 
     */
    public PredicateAnnotation createPredicateAnnotation() {
        return new PredicateAnnotation();
    }

    /**
     * Create an instance of {@link CoreferenceAnnotation }
     * 
     */
    public CoreferenceAnnotation createCoreferenceAnnotation() {
        return new CoreferenceAnnotation();
    }

    /**
     * Create an instance of {@link ExampleAnnotation }
     * 
     */
    public ExampleAnnotation createExampleAnnotation() {
        return new ExampleAnnotation();
    }

    /**
     * Create an instance of {@link TokenAnnotation }
     * 
     */
    public TokenAnnotation createTokenAnnotation() {
        return new TokenAnnotation();
    }

    /**
     * Create an instance of {@link PhonologicalAnnotation }
     * 
     */
    public PhonologicalAnnotation createPhonologicalAnnotation() {
        return new PhonologicalAnnotation();
    }

    /**
     * Create an instance of {@link TextAnnotation }
     * 
     */
    public TextAnnotation createTextAnnotation() {
        return new TextAnnotation();
    }

    /**
     * Create an instance of {@link MetricAnnotation }
     * 
     */
    public MetricAnnotation createMetricAnnotation() {
        return new MetricAnnotation();
    }

    /**
     * Create an instance of {@link MorphologicalAnnotation }
     * 
     */
    public MorphologicalAnnotation createMorphologicalAnnotation() {
        return new MorphologicalAnnotation();
    }

    /**
     * Create an instance of {@link ComplexalignmentAnnotation }
     * 
     */
    public ComplexalignmentAnnotation createComplexalignmentAnnotation() {
        return new ComplexalignmentAnnotation();
    }

    /**
     * Create an instance of {@link ObservationAnnotation }
     * 
     */
    public ObservationAnnotation createObservationAnnotation() {
        return new ObservationAnnotation();
    }

    /**
     * Create an instance of {@link EventAnnotation }
     * 
     */
    public EventAnnotation createEventAnnotation() {
        return new EventAnnotation();
    }

    /**
     * Create an instance of {@link TimesegmentAnnotation }
     * 
     */
    public TimesegmentAnnotation createTimesegmentAnnotation() {
        return new TimesegmentAnnotation();
    }

    /**
     * Create an instance of {@link CorrectionAnnotation }
     * 
     */
    public CorrectionAnnotation createCorrectionAnnotation() {
        return new CorrectionAnnotation();
    }

    /**
     * Create an instance of {@link LinebreakAnnotation }
     * 
     */
    public LinebreakAnnotation createLinebreakAnnotation() {
        return new LinebreakAnnotation();
    }

    /**
     * Create an instance of {@link StyleAnnotation }
     * 
     */
    public StyleAnnotation createStyleAnnotation() {
        return new StyleAnnotation();
    }

    /**
     * Create an instance of {@link WhitespaceAnnotation }
     * 
     */
    public WhitespaceAnnotation createWhitespaceAnnotation() {
        return new WhitespaceAnnotation();
    }

    /**
     * Create an instance of {@link SemroleAnnotation }
     * 
     */
    public SemroleAnnotation createSemroleAnnotation() {
        return new SemroleAnnotation();
    }

    /**
     * Create an instance of {@link DefinitionAnnotation }
     * 
     */
    public DefinitionAnnotation createDefinitionAnnotation() {
        return new DefinitionAnnotation();
    }

    /**
     * Create an instance of {@link Meta }
     * 
     */
    public Meta createMeta() {
        return new Meta();
    }

    /**
     * Create an instance of {@link AnyContent }
     * 
     */
    public AnyContent createAnyContent() {
        return new AnyContent();
    }

    /**
     * Create an instance of {@link Def }
     * 
     */
    public Def createDef() {
        return new Def();
    }

    /**
     * Create an instance of {@link Sentiments }
     * 
     */
    public Sentiments createSentiments() {
        return new Sentiments();
    }

    /**
     * Create an instance of {@link Comment }
     * 
     */
    public Comment createComment() {
        return new Comment();
    }

    /**
     * Create an instance of {@link Desc }
     * 
     */
    public Desc createDesc() {
        return new Desc();
    }

    /**
     * Create an instance of {@link Correction }
     * 
     */
    public Correction createCorrection() {
        return new Correction();
    }

    /**
     * Create an instance of {@link Current }
     * 
     */
    public Current createCurrent() {
        return new Current();
    }

    /**
     * Create an instance of {@link Relation }
     * 
     */
    public Relation createRelation() {
        return new Relation();
    }

    /**
     * Create an instance of {@link Aref }
     * 
     */
    public Aref createAref() {
        return new Aref();
    }

    /**
     * Create an instance of {@link Alignment }
     * 
     */
    public Alignment createAlignment() {
        return new Alignment();
    }

    /**
     * Create an instance of {@link Feat }
     * 
     */
    public Feat createFeat() {
        return new Feat();
    }

    /**
     * Create an instance of {@link Metric }
     * 
     */
    public Metric createMetric() {
        return new Metric();
    }

    /**
     * Create an instance of {@link Wref }
     * 
     */
    public Wref createWref() {
        return new Wref();
    }

    /**
     * Create an instance of {@link Coreferencechain }
     * 
     */
    public Coreferencechain createCoreferencechain() {
        return new Coreferencechain();
    }

    /**
     * Create an instance of {@link Coreferencelink }
     * 
     */
    public Coreferencelink createCoreferencelink() {
        return new Coreferencelink();
    }

    /**
     * Create an instance of {@link Hd }
     * 
     */
    public Hd createHd() {
        return new Hd();
    }

    /**
     * Create an instance of {@link Observation }
     * 
     */
    public Observation createObservation() {
        return new Observation();
    }

    /**
     * Create an instance of {@link Semrole }
     * 
     */
    public Semrole createSemrole() {
        return new Semrole();
    }

    /**
     * Create an instance of {@link Chunk }
     * 
     */
    public Chunk createChunk() {
        return new Chunk();
    }

    /**
     * Create an instance of {@link Dep }
     * 
     */
    public Dep createDep() {
        return new Dep();
    }

    /**
     * Create an instance of {@link Entity }
     * 
     */
    public Entity createEntity() {
        return new Entity();
    }

    /**
     * Create an instance of {@link Timesegment }
     * 
     */
    public Timesegment createTimesegment() {
        return new Timesegment();
    }

    /**
     * Create an instance of {@link Sentiment }
     * 
     */
    public Sentiment createSentiment() {
        return new Sentiment();
    }

    /**
     * Create an instance of {@link Source }
     * 
     */
    public Source createSource() {
        return new Source();
    }

    /**
     * Create an instance of {@link Target }
     * 
     */
    public Target createTarget() {
        return new Target();
    }

    /**
     * Create an instance of {@link Predicate }
     * 
     */
    public Predicate createPredicate() {
        return new Predicate();
    }

    /**
     * Create an instance of {@link Su }
     * 
     */
    public Su createSu() {
        return new Su();
    }

    /**
     * Create an instance of {@link Statement }
     * 
     */
    public Statement createStatement() {
        return new Statement();
    }

    /**
     * Create an instance of {@link Dependency }
     * 
     */
    public Dependency createDependency() {
        return new Dependency();
    }

    /**
     * Create an instance of {@link Head }
     * 
     */
    public Head createHead() {
        return new Head();
    }

    /**
     * Create an instance of {@link Entities }
     * 
     */
    public Entities createEntities() {
        return new Entities();
    }

    /**
     * Create an instance of {@link Morphology }
     * 
     */
    public Morphology createMorphology() {
        return new Morphology();
    }

    /**
     * Create an instance of {@link Morpheme }
     * 
     */
    public Morpheme createMorpheme() {
        return new Morpheme();
    }

    /**
     * Create an instance of {@link Chunking }
     * 
     */
    public Chunking createChunking() {
        return new Chunking();
    }

    /**
     * Create an instance of {@link Phonology }
     * 
     */
    public Phonology createPhonology() {
        return new Phonology();
    }

    /**
     * Create an instance of {@link Phoneme }
     * 
     */
    public Phoneme createPhoneme() {
        return new Phoneme();
    }

    /**
     * Create an instance of {@link Statements }
     * 
     */
    public Statements createStatements() {
        return new Statements();
    }

    /**
     * Create an instance of {@link Semroles }
     * 
     */
    public Semroles createSemroles() {
        return new Semroles();
    }

    /**
     * Create an instance of {@link Complexalignments }
     * 
     */
    public Complexalignments createComplexalignments() {
        return new Complexalignments();
    }

    /**
     * Create an instance of {@link Complexalignment }
     * 
     */
    public Complexalignment createComplexalignment() {
        return new Complexalignment();
    }

    /**
     * Create an instance of {@link Timing }
     * 
     */
    public Timing createTiming() {
        return new Timing();
    }

    /**
     * Create an instance of {@link Observations }
     * 
     */
    public Observations createObservations() {
        return new Observations();
    }

    /**
     * Create an instance of {@link Syntax }
     * 
     */
    public Syntax createSyntax() {
        return new Syntax();
    }

    /**
     * Create an instance of {@link Dependencies }
     * 
     */
    public Dependencies createDependencies() {
        return new Dependencies();
    }

    /**
     * Create an instance of {@link Coreferences }
     * 
     */
    public Coreferences createCoreferences() {
        return new Coreferences();
    }

    /**
     * Create an instance of {@link Lemma }
     * 
     */
    public Lemma createLemma() {
        return new Lemma();
    }

    /**
     * Create an instance of {@link Sense }
     * 
     */
    public Sense createSense() {
        return new Sense();
    }

    /**
     * Create an instance of {@link Subjectivity }
     * 
     */
    public Subjectivity createSubjectivity() {
        return new Subjectivity();
    }

    /**
     * Create an instance of {@link Lang }
     * 
     */
    public Lang createLang() {
        return new Lang();
    }

    /**
     * Create an instance of {@link Domain }
     * 
     */
    public Domain createDomain() {
        return new Domain();
    }

    /**
     * Create an instance of {@link Errordetection }
     * 
     */
    public Errordetection createErrordetection() {
        return new Errordetection();
    }

    /**
     * Create an instance of {@link Pos }
     * 
     */
    public Pos createPos() {
        return new Pos();
    }

    /**
     * Create an instance of {@link Alt }
     * 
     */
    public Alt createAlt() {
        return new Alt();
    }

    /**
     * Create an instance of {@link Altlayers }
     * 
     */
    public Altlayers createAltlayers() {
        return new Altlayers();
    }

    /**
     * Create an instance of {@link Part }
     * 
     */
    public Part createPart() {
        return new Part();
    }

    /**
     * Create an instance of {@link Div }
     * 
     */
    public Div createDiv() {
        return new Div();
    }

    /**
     * Create an instance of {@link Entry }
     * 
     */
    public Entry createEntry() {
        return new Entry();
    }

    /**
     * Create an instance of {@link Ex }
     * 
     */
    public Ex createEx() {
        return new Ex();
    }

    /**
     * Create an instance of {@link Figure }
     * 
     */
    public Figure createFigure() {
        return new Figure();
    }

    /**
     * Create an instance of {@link Caption }
     * 
     */
    public Caption createCaption() {
        return new Caption();
    }

    /**
     * Create an instance of {@link Gap }
     * 
     */
    public Gap createGap() {
        return new Gap();
    }

    /**
     * Create an instance of {@link Br }
     * 
     */
    public Br createBr() {
        return new Br();
    }

    /**
     * Create an instance of {@link Ph }
     * 
     */
    public Ph createPh() {
        return new Ph();
    }

    /**
     * Create an instance of {@link Ref }
     * 
     */
    public Ref createRef() {
        return new Ref();
    }

    /**
     * Create an instance of {@link P }
     * 
     */
    public P createP() {
        return new P();
    }

    /**
     * Create an instance of {@link Event }
     * 
     */
    public Event createEvent() {
        return new Event();
    }

    /**
     * Create an instance of {@link List }
     * 
     */
    public List createList() {
        return new List();
    }

    /**
     * Create an instance of {@link Item }
     * 
     */
    public Item createItem() {
        return new Item();
    }

    /**
     * Create an instance of {@link Label }
     * 
     */
    public Label createLabel() {
        return new Label();
    }

    /**
     * Create an instance of {@link Str }
     * 
     */
    public Str createStr() {
        return new Str();
    }

    /**
     * Create an instance of {@link T }
     * 
     */
    public T createT() {
        return new T();
    }

    /**
     * Create an instance of {@link TError }
     * 
     */
    public TError createTError() {
        return new TError();
    }

    /**
     * Create an instance of {@link TStr }
     * 
     */
    public TStr createTStr() {
        return new TStr();
    }

    /**
     * Create an instance of {@link TCorrection }
     * 
     */
    public TCorrection createTCorrection() {
        return new TCorrection();
    }

    /**
     * Create an instance of {@link TGap }
     * 
     */
    public TGap createTGap() {
        return new TGap();
    }

    /**
     * Create an instance of {@link TStyle }
     * 
     */
    public TStyle createTStyle() {
        return new TStyle();
    }

    /**
     * Create an instance of {@link W }
     * 
     */
    public W createW() {
        return new W();
    }

    /**
     * Create an instance of {@link Note }
     * 
     */
    public Note createNote() {
        return new Note();
    }

    /**
     * Create an instance of {@link S }
     * 
     */
    public S createS() {
        return new S();
    }

    /**
     * Create an instance of {@link Quote }
     * 
     */
    public Quote createQuote() {
        return new Quote();
    }

    /**
     * Create an instance of {@link Utt }
     * 
     */
    public Utt createUtt() {
        return new Utt();
    }

    /**
     * Create an instance of {@link Whitespace }
     * 
     */
    public Whitespace createWhitespace() {
        return new Whitespace();
    }

    /**
     * Create an instance of {@link Table }
     * 
     */
    public Table createTable() {
        return new Table();
    }

    /**
     * Create an instance of {@link Row }
     * 
     */
    public Row createRow() {
        return new Row();
    }

    /**
     * Create an instance of {@link Cell }
     * 
     */
    public Cell createCell() {
        return new Cell();
    }

    /**
     * Create an instance of {@link Tablehead }
     * 
     */
    public Tablehead createTablehead() {
        return new Tablehead();
    }

    /**
     * Create an instance of {@link Listitem }
     * 
     */
    public Listitem createListitem() {
        return new Listitem();
    }

    /**
     * Create an instance of {@link Term }
     * 
     */
    public Term createTerm() {
        return new Term();
    }

    /**
     * Create an instance of {@link Speech }
     * 
     */
    public Speech createSpeech() {
        return new Speech();
    }

    /**
     * Create an instance of {@link External }
     * 
     */
    public External createExternal() {
        return new External();
    }

    /**
     * Create an instance of {@link Text }
     * 
     */
    public Text createText() {
        return new Text();
    }

    /**
     * Create an instance of {@link New }
     * 
     */
    public New createNew() {
        return new New();
    }

    /**
     * Create an instance of {@link Original }
     * 
     */
    public Original createOriginal() {
        return new Original();
    }

    /**
     * Create an instance of {@link Suggestion }
     * 
     */
    public Suggestion createSuggestion() {
        return new Suggestion();
    }

    /**
     * Create an instance of {@link FoLiA }
     * 
     */
    public FoLiA createFoLiA() {
        return new FoLiA();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ilk.uvt.nl/folia", name = "content")
    public JAXBElement<String> createContent(String value) {
        return new JAXBElement<String>(_Content_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AnyContent }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://ilk.uvt.nl/folia", name = "foreign-data")
    public JAXBElement<AnyContent> createForeignData(AnyContent value) {
        return new JAXBElement<AnyContent>(_ForeignData_QNAME, AnyContent.class, null, value);
    }

}
